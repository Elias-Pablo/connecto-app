datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

generator client {
  provider = "prisma-client-js"
}


model User {
  user_id    Int                 @id @default(autoincrement())
  username   String              @db.VarChar(50)
  email      String              @unique @db.VarChar(100)
  password   String              @db.VarChar(255)
  created_at DateTime            @default(now())

  // Relaciones
  businessProfiles BusinessProfile[]
  Notifications Notification[]
}

model BusinessProfile {
  profile_id    Int                 @id @default(autoincrement())
  user_id       Int
  business_name String              @db.VarChar(100)
  description   String?             @db.Text
  address       String?             @db.VarChar(255)
  phone         String?             @db.VarChar(20)
  website_url   String?             @db.VarChar(255)
  profile_type  ProfileType         @default(Free)
  created_at    DateTime            @default(now())

  // Relaciones
  user                  User                      @relation(fields: [user_id], references: [user_id])
  interactions          Interaction[]
  products              Product[]
  promotions            Promotion[]
  searchVisibility      SearchVisibility[]
  socialMediaManagement SocialMediaManagement[]
}

model Interaction {
  interaction_id   Int              @id @default(autoincrement())
  profile_id       Int
  interaction_type InteractionType
  interaction_date DateTime         @default(now())

  // Relaciones
  businessProfile  BusinessProfile  @relation(fields: [profile_id], references: [profile_id])
}

model Product {
  product_id  Int                 @id @default(autoincrement())
  profile_id  Int
  name        String              @db.VarChar(100)
  description String?             @db.Text
  price       Decimal              @db.Decimal(10, 2)
  stock       Int
  created_at  DateTime            @default(now())

  // Relaciones
  businessProfile BusinessProfile  @relation(fields: [profile_id], references: [profile_id])
}

model Promotion {
  promotion_id Int                @id @default(autoincrement())
  profile_id   Int
  title        String             @db.VarChar(100)
  description  String?            @db.Text
  start_date   DateTime           @db.Date
  end_date     DateTime           @db.Date
  created_at   DateTime           @default(now())

  // Relaciones
  businessProfile BusinessProfile @relation(fields: [profile_id], references: [profile_id])
}

model SearchVisibility {
  visibility_id    Int            @id @default(autoincrement())
  profile_id       Int
  visibility_level VisibilityLevel @default(Basic)

  // Relaciones
  businessProfile  BusinessProfile @relation(fields: [profile_id], references: [profile_id])
}

model SocialMediaManagement {
  management_id Int               @id @default(autoincrement())
  profile_id    Int
  platform      SocialMediaPlatform
  post_content  String?            @db.Text
  post_date     DateTime           @default(now())
  ai_generated  Boolean            @default(false)

  // Relaciones
  businessProfile BusinessProfile  @relation(fields: [profile_id], references: [profile_id])
}
model Notification {
  notification_id Int               @id @default(autoincrement())
  user_id         Int
  title           String            @db.VarChar(100)
  message         String            @db.Text
  created_at      DateTime          @default(now())

  // Relaciones
  user User              @relation(fields: [user_id], references: [user_id])
}

// Enums

enum ProfileType {
  Free
  Premium
}

enum InteractionType {
  View
  Click
  Purchase
}

enum VisibilityLevel {
  Basic
  Enhanced
}

enum SocialMediaPlatform {
  Facebook
  Twitter
  Instagram
}