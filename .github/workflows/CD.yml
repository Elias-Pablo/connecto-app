# This workflow performs a continuous deployment of a Node.js project.
# It includes steps for cloning the repository, setting up Node.js,
# installing dependencies, running tests, building the project,
# and creating a GitHub release.

name: CD
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production # Typically set to 'production' for deployment

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Use Node.js 18
        uses: actions/setup-node@v2
        with:
          node-version: 18.17.0
          cache: "npm"

      - name: Install dependencies
        run: npm ci
        env:
          CI: true

      - name: Run the tests
        run: npm run test

      # Configure Git User for making commits
      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      # Get version number from package.json and save it in a variable
      - name: Get package version
        run: echo "::set-output name=tag-version::$(jq -r '.version' package.json | sed 's/-SNAPSHOT.0//')"
        id: version
        shell: bash

      - name: Build
        run: npm run build

      # Create a new GitHub Release
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          tag: ${{ steps.version.outputs.tag-version }}
          token: ${{ secrets.GITHUB_TOKEN }}

      # Prepare a new SNAPSHOT version
      - name: Create SNAPSHOT
        run: npm version prerelease --preid SNAPSHOT --no-git-tag-version

      - name: Update version in remote
        run: |
          git add package.json package-lock.json
          git commit -m "Update SNAPSHOT"
          git push
